set <- read.csv("C:\\Users\\bartkows\\Documents\\Papers\\pubcsindices.csv")
set <- read.csv("C:\\Users\\bartkows\\Documents\\Papers\\pubcshindices.csv")
set <- read.csv("C:\\Users\\bartkows\\Documents\\Papers\\pubshindices.csv")
View(set)
set <- read.csv("C:\\Users\\bartkows\\Documents\\Papers\\pubshindices.csv",sep=",")
set <- read.csv("C:\\Users\\bartkows\\Documents\\Papers\\pubshindices.csv",sep=";")
View(set)
plot(set$Publications,set$h.index)
data = read.csv("C:\\Users\\bartkows\\Documents\\Orga\\Department TB\\Prozessgruppe\\Themenkolleg\\Umfrage\\data_tb6kolleg_2019-02-01_08-24.csv")
values = read.csv("C:\\Users\\bartkows\\Documents\\Orga\\Department TB\\Prozessgruppe\\Themenkolleg\\Umfrage\\values_tb6kolleg_2019-02-01_08-28.csv")
variables = read.csv("C:\\Users\\bartkows\\Documents\\Orga\\Department TB\\Prozessgruppe\\Themenkolleg\\Umfrage\\variables_tb6kolleg_2019-02-01_08-28")
data = read.csv("C:\\Users\\bartkows\\Documents\\Orga\\Department TB\\Prozessgruppe\\Themenkolleg\\Umfrage\\data_tb6kolleg_2019-02-01_08-24.csv",header=TRUE)
View(data)
data = read.csv("C:\\Users\\bartkows\\Documents\\Orga\\Department TB\\Prozessgruppe\\Themenkolleg\\Umfrage\\data_tb6kolleg_2019-02-01_08-24.csv",skip=2)
install.packages("searcher")
library(searcher)
R.home(component = "home")
R.home(component="home")
R.home(component="home")
library(rJava)
require(rJava)
install.packages("JavaGD")
install.packages("CommonJavaJars")
require(rJava)
require(JavaGD)
require(CommonJavaJars)
require(searcher)
require(class)
install.packages("raster")
# load required package (here just for plotting)
library(raster)
# read in ascii files as tables
lu.map <- read.table("landuse_rand.asc", h=F, skip=6, sep=" ")
# set working directory CHANGED BB
setwd("C:\Users\bartkows\Documents\Papers\2019 Social ecological optimization IP\Model\models_data")
# set working directory CHANGED BB
setwd("C:\\Users\\bartkows\\Documents\\Papers\\2019 Social ecological optimization IP\\Model\\models_data")
# read in ascii files as tables
lu.map <- read.table("landuse_rand.asc", h=F, skip=6, sep=" ")
fert.map <- read.table("soil_fertility.asc", h=F, skip=6, sep=" ")
View(fert.map)
# array index for arable land
arable.idx <- which(lu.map == 2, arr.ind=T)
View(arable.idx)
View(lu.map)
View(lu.map)
# calculate agricultural yield (ay) as a function of total area of intensive grassland and soil fertility
# ay can range between 0 (worst; no intensive GL at all) to 100 (best; intensive GL everywhere)
# ay on the most fertile soil is double the ay on the least fertile soil
# the value 3.067 refers to the maximum possible ay (divided by 100) and is used for normalization
ay <- lu.map[arable.idx] / 2 * (1 + fert.map[arable.idx]) / 3.0687
ay
ay[is.na(ay)] <- 0
ay <- round(sum(ay), 2)
plot(ay)
# calculate agricultural yield (ay) as a function of total area of intensive grassland and soil fertility
# ay can range between 0 (worst; no intensive GL at all) to 100 (best; intensive GL everywhere)
# ay on the most fertile soil is double the ay on the least fertile soil
# the value 3.067 refers to the maximum possible ay (divided by 100) and is used for normalization
ay <- lu.map[arable.idx] / 2 * (1 + fert.map[arable.idx]) / 3.0687
# calculate agricultural yield (ay) as a function of total area of intensive grassland and soil fertility
# ay can range between 0 (worst; no intensive GL at all) to 100 (best; intensive GL everywhere)
# ay on the most fertile soil is double the ay on the least fertile soil
# the value 3.067 refers to the maximum possible ay (divided by 100) and is used for normalization
ay <- lu.map[arable.idx] / 2 * (1 + fert.map[arable.idx]) # / 3.0687
ay
# set working directory
setwd("C:\\Users\\bartkows\\Documents\\Papers\\2019 Social ecological optimization IP\\Model\\models_data")
# read in ascii files as tables
lu.map <- read.table("landuse_rand.asc", h=F, skip=6, sep=" ")
fert.map <- read.table("soil_fertility.asc", h=F, skip=6, sep=" ")
# array index for grassland
grassland.idx <- which(lu.map <= 2, arr.ind=T)
ay <- log(lu.map[grassland.idx] * (1 + fert.map[grassland.idx]))
ay[is.na(ay)] <- 0
# summarize over whole area and normalize ay to a range from 0 to 100
ay.sum <- (round(sum(ay),2) - 82.01) / (220.64 - 82.01) * 100
ay
View(grassland.idx)
View(lu.map)
source('C:Users/bartkows/Documents/Papers/2019 Social ecological optimization IP/Model/models_data/AY_test.R')
install.packages("raster")
# load required package (here just for plotting)
library(raster)
# set working directory
setwd("C:/Users/mstrauch/Nextcloud/Shared with me/Sozial-Ã¶kologische Modellierung/Virtuelle_Fallstudie")
# read in ascii files as tables
lu.map <- read.table("landuse_2.asc", h=F, skip=6, sep=" ")
fert.map <- read.table("soil_fertility.asc", h=F, skip=6, sep=" ")
# (just for testing) visualize maps
lu.map_ <- read.asciigrid("landuse_rand.asc", as.image = FALSE, plot.image = FALSE, colname = "lu",
proj4string = CRS(as.character(NA)))
fert.map_ <- read.asciigrid("soil_fertility.asc", as.image = FALSE, plot.image = FALSE, colname = "lu",
proj4string = CRS(as.character(NA)))
plot(lu.map_)
plot(fert.map_)
plot(lu.map_)
